# Generated by Django 4.2.9 on 2024-10-24 22:51

import core.manager
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('Auto_Show', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('Name', models.CharField(max_length=50)),
                ('Image', models.FileField(blank=True, null=True, upload_to='usersProfile/403b0351-64d4-483d-b19b-39e17f53240f%Y%m%d')),
                ('Username', models.CharField(max_length=50, unique=True)),
                ('Phone', models.CharField(max_length=30)),
                ('Group', models.CharField(max_length=30)),
                ('Address', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('AutoShow', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='Auto_Show.autoshow')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', core.manager.UserManager()),
            ],
        ),
    ]
